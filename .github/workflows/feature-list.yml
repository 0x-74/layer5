name: Feature List

on:
  workflow_dispatch:
  schedule:
    - cron: '0 0 * * *' 

permissions:
  contents: write
  actions: read

jobs:
  trigger-feature-list:
    runs-on: ubuntu-latest
    env:
      FEATURES_FILE: 'src/sections/Pricing/feature_data.json'
      SPREADSHEET_URL: 'http://docs.google.com/spreadsheets/d/1Ck_5q7U_vLSIDTtplugG3pCVC5zugXgTHtO7T7-yL8g/export?format=csv&gid=829069645&single=true&output=csv'

    steps:
      - name: Checkout current repository
        uses: actions/checkout@v4

      - name: Install Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18
    
      - name: Install dependencies
        run: |
          npm install csvtojson --legacy-peer-deps

      - name: Fetch spreadsheet and process updates
        run: |
          # Download the spreadsheet
          curl -L $SPREADSHEET_URL -o spreadsheet.csv

          # Process the CSV, filter data, and append to feature_data.json
          node -e "
          const fs = require('fs');
          const csv = require('csvtojson');

          // Read and parse CSV
          csv()
            .fromFile('spreadsheet.csv')
            .then(rows => {
              const filteredData = rows.map(row => {
                const includeRow = 
                  (row['pricing page?'] && ['x', 'X', 'true'].includes(row['pricing page?'].toLowerCase())) || 
                  (row['documented?'] && (row['documented?'].startsWith('https://docs.meshery.io/') || row['documented?'].startsWith('https://docs.layer5.io/')));

                if (!includeRow) return null;

                return {
                  category: row['category'],
                  theme: row['theme (also: keychain name)'],
                  function: row['function'],
                  feature: row['feature'],
                  subscription_tier: row['subscription tier'],
                  tech: row['tech'],
                  pricing_page: row['pricing page?'] ? 'true' : undefined,
                  documented: row['documented?'],
                  comparison_tiers: {
                    free: row['free comparison tier'],
                    teamDesigner: row['teamDesigner comparison tier'],
                    teamOperator: row['teamOperator comparison tier'],
                    enterprise: row['enterprise comparison tier'],
                  }
                };
              }).filter(Boolean);

              const featuresFile = process.env.FEATURES_FILE;

              // Read existing JSON data
              let existingData = [];
              if (fs.existsSync(featuresFile)) {
                existingData = JSON.parse(fs.readFileSync(featuresFile, 'utf8'));
              }

              // Merge new data with existing data
              const updatedData = [...existingData, ...filteredData];

              // Write updated JSON back to file
              fs.writeFileSync(featuresFile, JSON.stringify(updatedData, null, 2));
            })
            .catch(error => {
              console.error('Error processing spreadsheet:', error);
              process.exit(1);
            });
          "

      - name: Commit changes
        id: commit-changes
        if: steps.check-updates.outputs.has-updates == 'true'
        uses: stefanzweifel/git-auto-commit-action@v5
        with:
          commit_message: "Updated feature data from spreadsheet"
          file_pattern: ${{ env.FEATURES_FILE }}
          branch: master
          commit_options: "--signoff"
          commit_user_name: l5io
          commit_user_email: ci@layer5.io
          commit_author: 'l5io <l5io@users.noreply.github.com>'
  call-build-and-deploy--workflow:
    needs:
      - trigger-feature-list
    name: Build and Deploy Site
    uses: layer5io/layer5/.github/workflows/build-and-deploy-site.yml@master
    secrets: inherit
